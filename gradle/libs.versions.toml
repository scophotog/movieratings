[versions]
activityCompose = "1.4.0"
anvil = "2.4.8" # https://github.com/square/anvil/releases
androidCoreTesting = "2.1.0"
androidxComposeBom = "2023.01.00"
coil = "2.1.0"
compileSdk = "33"
compose-compiler = "1.4.6"
ktx = "1.12.0"
coreTesting = "2.1.0"
dagger = "2.47" # https://github.com/google/dagger/releases
espresso = "3.4.0"
fragmentKtx = "1.4.1"
gradleAndroid = "8.1.1"
hilt = "2.44"
hiltNavigation = "1.0.0"
junit = "4.13.2"
junitAndroidExt = "1.1.2"
kotlinXCoroutines = "1.5.2"
kotlin-general = "1.8.20"
ksp = "1.9.0-1.0.13" # https://github.com/google/ksp/releases
lifecycle = "2.6.2"
material = "1.3.0"
minSdk = "23"
mockk = "1.13.4"
moshi = "1.14.0"
navigation = "2.5.0"
okhttpLogging = "4.9.1"
preferenceKtx = "1.2.0"
recyclerView = "1.2.1"
retrofit = "2.9.0"
room = "2.5.2"
targetSdk = "33"

[libraries]
activityCompose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
androidCoreTesting = { module = "androidx.arch.core:core-testing", version.ref = "androidCoreTesting" }
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "gradleAndroid" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "androidxComposeBom" }
androidx-compose-foundation = { group = "androidx.compose.foundation", name = "foundation" }
androidx-compose-material = { group = "androidx.compose.material", name = "material" }
androidx-compose-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-compose-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-compose-toolingPreview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-compose-uiTooling = { group = "androidx.compose.ui", name = "ui-tooling" }
coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coilCompose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
coreKtx = { module = "androidx.core:core-ktx", version.ref = "ktx" }
coroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinXCoroutines" }
coroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinXCoroutines" }
# Dependency Injection
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-kapt = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }

espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
fragmentKtx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentKtx" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hilt-android-gradle = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigation" }
junit = { module = "junit:junit", version.ref = "junit" }
junitAndroidExt = { module = "androidx.test.ext:junit", version.ref = "junitAndroidExt" }
kotlin-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin-general" }
kotlin-ksp-gradle = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttpLogging" }
material = { module = "com.google.android.material:material", version.ref = "material" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk"}
moshi = { module = "com.squareup.moshi:moshi-adapters", version.ref = "moshi" }
moshiKotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
moshiKotlinCodegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }
navigationCompose = { module = "androidx.navigation:navigation-compose", version.ref = "navigation" }
navigation-fragment-ktx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofitMoshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
# Dependency Injection - Anvil
square-anvil-annotations = { module = "com.squareup.anvil:annotations", version.ref = "anvil" }
square-anvil-compiler-api = { module = "com.squareup.anvil:compiler-api", version.ref = "anvil" }
square-anvil-compiler-core = { module = "com.squareup.anvil:compiler", version.ref = "anvil" }
square-anvil-compiler-utils = { module = "com.squareup.anvil:compiler-utils", version.ref = "anvil" }
square-anvil-gradle = { module = "com.squareup.anvil:gradle-plugin", version.ref = "anvil" }


[plugins]
android-app = { id = "com.android.application", version.ref = "gradleAndroid" }
android-lib = { id = "com.android.library", version.ref = "gradleAndroid" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin-general" }
kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin-general" }
square-anvil = { id = "com.squareup.anvil", version.ref = "anvil" }
android-hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt"}
